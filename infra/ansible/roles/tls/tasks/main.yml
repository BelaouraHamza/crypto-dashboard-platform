- name: Ensure /etc/hosts contains crypto.local
  become: yes
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "127.0.0.1 crypto.local"
    state: present

- name: Generate private key
  community.crypto.openssl_privatekey:
    path: /etc/ssl/private/selfsigned.key
    size: 2048
    type: RSA
    mode: '0600'

- name: Generate CSR (Certificate Signing Request)
  community.crypto.openssl_csr:
    path: /etc/ssl/certs/selfsigned.csr
    privatekey_path: /etc/ssl/private/selfsigned.key
    common_name: "crypto.local"
    country_name: "FR"
    organization_name: "MyOrg"

- name: Self-sign certificate
  community.crypto.x509_certificate:
    path: /etc/ssl/certs/selfsigned.crt
    privatekey_path: /etc/ssl/private/selfsigned.key
    csr_path: /etc/ssl/certs/selfsigned.csr
    provider: selfsigned
    selfsigned_notBefore: "+0s"
    selfsigned_notAfter: "+365d"
    state: present

- name: Ensure crypto namespace exists
  community.kubernetes.k8s:
    state: present
    kind: Namespace
    name: crypto
  environment:
    KUBECONFIG: "/home/hamza/.kube/config"  # <- mets le chemin exact à ton kubeconfig

- name: Create TLS secret in crypto namespace
  kubernetes.core.k8s:
    state: present
    namespace: crypto
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: crypto-tls
      type: kubernetes.io/tls
      data:
        tls.crt: "{{ lookup('file','/etc/ssl/certs/selfsigned.crt') | b64encode }}"
        tls.key: "{{ lookup('file','/etc/ssl/private/selfsigned.key') | b64encode }}"
  environment:
    KUBECONFIG: "/home/hamza/.kube/config"  # <- mets le chemin exact à ton kubeconfig  

- name: Clean temporary files
  ansible.builtin.file:
    path: "/tmp/{{ item }}"
    state: absent
  loop:
    - crypto.local.key
    - crypto.local.csr
    - crypto.local.crt
